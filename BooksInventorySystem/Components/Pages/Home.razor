@page "/"
@inject BooksClient BooksClient
@rendermode InteractiveServer
@inject NavigationManager NavigationManager



<PageTitle>Home</PageTitle>

@if(books is null){
    <p><em>Loading...</em></p>
}else{
    <div class="my-4 w-full ">

        <div class="flex justify-between place-items-center py-1">
            <h1 class = "font-semibold text-xl">
            Catalog</h1>

        </div>

        <div class="flex justify-between place-items-center py-1">
            <div class="text-center bg-blue-100">
                <input class="border-4 w-1/3 rounded m-6 p-6 h-8 "  @oninput="@OnSearchTextChanged" placeholder="Search by title" />
            </div>

                <a href="/addbook">
                    <button type="button" class="px-8 py-2 font-semibold rounded bg-slate-800 hover:bg-slate-700 transition-all .05 ease-in text-slate-50">Add Book</button>
                </a>
        </div>


        <table class="w-full table-auto border shadow rounded-md"> 
            <thead>
                <tr class="border bg-slate-100">
                <th class="text-left px-4 py-2 font-medium text-gray-700 bg-gray-200">Id</th>
                <th class="text-center px-4 py-2 font-medium text-gray-700 bg-gray-200">Title</th>
                <th class="text-right px-4 py-2 font-medium text-gray-700 bg-gray-200">Author(s)</th>
                <th class="text-right px-4 py-2 font-medium text-gray-700 bg-gray-200">Price</th>
                <th class="text-right px-4 py-2 font-medium text-gray-700 bg-gray-200">Published Date</th>
                <th></th>
                </tr>
            </thead>
            <tbody>
                @* rendering books from server *@
                @foreach (var book in books){
                    <tr class="hover:bg-slate-100 bg-white relative border">
                        <td class="px-4 py-2 border">@book.Id</td>
                        <td class="px-4 py-2 border">@book.Title</td>
                        <td class="px-4 py-2 border">@book.Authors</td>
                        <td class="px-4 py-2 border text-right">@book.Price.ToString("C")</td>
                        <td class="px-4 py-2 border">@book.PublishedDate</td>
                        <td class="px-4 py-2  flex place-items-center h-full justify-center ">
                           <a href="@bookUrl(book.Id)" class="btn btn-primary me-2" role="button">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                 <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"/>
                                </svg>
                            </a> 
                            
                            @* delete book from inventory button *@
                            <button class="btn btn-danger" onclick="@(() => DeleteBook(book.Id))">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                                <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5m-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5M4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06m6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528M8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5"/>
                                </svg>
                            </button>
                           
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code{
   


    @* Fetch books from server *@

    private List<Book>? books;

    protected override void OnInitialized(){
        
        books = BooksClient.GetBooks();
    }

    @* searchtext binding varaible *@
    private string? Searchtext {get; set;}

    private void OnSearchTextChanged(ChangeEventArgs e)
    {
        Searchtext = e.Value?.ToString();
        if(Searchtext is not null){
            books = BooksClient.SearchBook(Searchtext);
        }
    }

    

    @* routing path to individual books *@
    private string bookUrl(int id) => $"/addbook/{id}";



    private void DeleteBook(int Id){
        BooksClient.DeleteBook(Id);
        StateHasChanged();
    }
}